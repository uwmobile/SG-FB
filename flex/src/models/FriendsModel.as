package models{		import com.facebook.graph.Facebook;	import com.facebook.graph.net.FacebookRequest;		import events.EventFactory;	import events.FriendsDataEvent;		import flash.events.EventDispatcher;		import mx.collections.ArrayList;		import utils.Constants;
		public class FriendsModel extends EventDispatcher {				protected static var friendsHash:Object = {};		protected static var friendsArrayList:ArrayList = new ArrayList();				private static var friendsIds:Array = [];				//constuctor		public function FriendsModel() {			super();		}				public static function get dataProvider():ArrayList {			return friendsArrayList;		}				public static function load():void {			Facebook.api('/me/friends', handleFriendsLoad);		}				protected static function handleFriendsLoad(response:Object, fail:Object):void {			friendsArrayList.removeAll();			if (fail) { return }						var friends:Array = response as Array;						var l:uint=friends.length;			for (var i:uint=0;i<l;i++) {				var friend:Object = friends[i];				friendsArrayList.addItem(friend);				friendsHash[friend.id] = friend;								friendsIds.push(friend.id);			}		}				public static function getFriendsData(requestData:Array):void		{			var requestIds:Array = [];			for (var i:int = 0; i<friendsIds.length; i++){				requestIds.push(friendsIds[i]);			}			//To keep down on requests, load some details about your friends via fql.			//var friendsFQL:String = 'SELECT pic_square, uid, profile_update_time, birthday_date, hometown_location, sex, status, wall_count FROM user WHERE uid IN (' + requestIds.join(',') + ')';			var friendsFQL:String = 'SELECT ' + requestData.join(',') + ' FROM user WHERE uid IN (' + requestIds.join(',') + ')';			Facebook.fqlQuery(friendsFQL, handleFriendsDataLoad);		}				protected static function handleFriendsDataLoad(response:Object, fail:Object):void {			if (fail) { return; }			var friendDetails:Array = response as Array;						var l:uint = friendDetails.length;						for (var i:uint=0;i<l;i++) {				var detailsObj:Object = friendDetails[i];				var friendObj:Object = friendsHash[detailsObj.uid];				for (var n:String in detailsObj) {					friendObj[n] = detailsObj[n];				}								friendsArrayList.itemUpdated(friendObj);			}						var returnEvent:FriendsDataEvent = new FriendsDataEvent(Constants.EVENT_FRIENDS_UPDATED);			returnEvent.data = friendsArrayList;			EventFactory.dispatchEvent(returnEvent);		}			}}